*

+ determine the region you're going to work in
+ create new key.  Here's url for us-west-2 region: https://us-west-2.console.aws.amazon.com/ec2/v2/home?region=us-west-2#KeyPairs:sort=keyName
+ replace =key_name = "ephemeral-test"= with your key name

*

**

/Users/demo/Downloads/cli53-mac-amd64 export -f ZYM2WVE2N8MU5 | wc -l

** provisioning failing on sudo password request
https://github.com/hashicorp/terraform/issues/492#issuecomment-59984941
https://terraform.io/docs/provisioners/connection.html

**

aws_instance.chef (local-exec): Enter proxy password for user 'vh':
aws_instance.chef (local-exec): Enter proxy password for user 'vh':
terraform Enter proxy password for user 'vh':

terraform local-exec curl



aws_instance.chef: Provisioning with 'local-exec'...
aws_instance.chef (local-exec): Executing: /bin/sh -c "cd /tmp && curl -O https://raw.githubusercontent.com/TaylorMonacelli/chef-practice/master/t2/chef_install.sh && sh -x chef_install.sh"
aws_instance.chef (local-exec):   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
aws_instance.chef (local-exec):                                  Dload  Upload   Total   Spent    Left  Speed
aws_instance.chef (local-exec):   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
aws_instance.chef (local-exec):   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
aws_instance.chef (local-exec): 100   166  100   166    0     0    193      0 --:--:-- --:--:-- --:--:--   193
aws_instance.chef (local-exec): + cd /tmp
aws_instance.chef (local-exec): + curl -O rpm -Uvh http://taylors-bucket.s3.amazonaws.com/chef-server-core-12.3.0-1.el5.x86_64.rpm
aws_instance.chef (local-exec): Enter proxy password for user 'vh':

* Terraform provisioning

https://terraform.io/intro/getting-started/provision.html

curl -o chef_install.sh https://github.com/TaylorMonacelli/chef-practice/chef_install.sh

* Install chef server

sudo -Hi
wget http://taylors-bucket.s3.amazonaws.com/chef-server-core-12.3.0-1.el5.x86_64.rpm
rpm -Uvh chef-server-core-12.3.0-1.el5.x86_64.rpm

* TODO find a way to automate the key generation, now I'm hard coding it

I generated this key using amazon webui:
key_name = "ephemeral-test"

Can we doit thgouh terraform or other?



resource "aws_instance" "chef" {
  ami = "${lookup(var.amis, var.region)}"
  instance_type = "t1.micro"
  key_name = "ephemeral-test"
  security_groups = ["${aws_security_group.chef.name}"]
  root_block_device {
	volume_size = "100"
  }
  tags {
	Name = "chef"
  }
}

* Chef server getting started

**

http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html

aws ec2 describe-images --owners amazon

**

https://docs.chef.io/release/server_12-2/install_server.html#standalone
http://downloads.chef.io/chef-server/

* Using ID in security group reference fails, but reference by name works

https://github.com/hashicorp/terraform/issues/575#issuecomment-64311829

This fails:
security_groups = ["${aws_security_group.cheftest.id}"]

but this is ok:
security_groups = ["${aws_security_group.cheftest.name}"]

** log

[demo@demos-MacBook-Pro:~/pdev/chef-practice/t2(master)]$ g dc --reverse main.tf
diff --git a/t2/main.tf b/t2/main.tf
index 1e9044e..bc6c161 100644
--- a/t2/main.tf
+++ b/t2/main.tf
@@ -24,7 +24,7 @@ resource "aws_instance" "chef" {
   ami = "${lookup(var.amis, var.region)}"
   instance_type = "t1.micro"
   key_name = "ephemeral-test"
-  security_groups = ["${aws_security_group.cheftest.name}"]
+  security_groups = ["${aws_security_group.cheftest.id}"]

   tags {
     Name = "cheftest"
[demo@demos-MacBook-Pro:~/pdev/chef-practice/t2(master)]$ #

* Summary

#+BEGIN_SRC
terraform plan -var-file=secrets.tfvars
terraform apply -var-file=secrets.tfvars
terraform destroy -var-file=secrets.tfvars
#+END_SRC
